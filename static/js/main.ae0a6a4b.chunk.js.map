{"version":3,"sources":["components/search.js","App.js","index.js"],"names":["Search","updateCity","id","className","publicKey","inputClass","onSuggestionSelect","result","resetSearch","App","useState","city","setCity","useEffect","c","console","log","url","fetch","then","res","getWeatherData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAyBeA,EApBA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAOhB,OACE,yBAAKC,GAAG,WAAWC,UAAU,oBAC3B,8CACA,kBAAC,IAAD,CACEC,UAAS,aAbL,iGAcJC,WAAW,SACXC,mBAVqB,SAACC,GAC1BN,EAAWM,IAUPC,aAAa,MCyBNC,MApCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEWF,mBAAS,IAFpB,mBAuBb,OAvBa,UAiBbG,qBAAU,WACK,KAATF,GAViB,SAACG,GACtBC,QAAQC,IAAR,+BAAoCF,IACpC,IAAMG,EAAG,UAbI,8CAaJ,OAAiBN,EAAjB,mBAZD,oCAaRO,MAAMD,GACHE,MAAK,SAAAC,GAAG,OAAGL,QAAQC,IAAII,MAOxBC,CAAeV,KAEhB,CAACA,IAGF,yBAAKR,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACb,yCACA,8FAEF,kBAAC,EAAD,CAAQF,WA1BK,SAACa,GAClBF,EAAQE,SCRZQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ae0a6a4b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport MapboxAutocomplete from 'react-mapbox-autocomplete'\n\nconst sec = \"eyJ1IjoiY2xhaXJlZnJvZnJvIiwiYSI6ImNrYnRsYnJvNTBhNzUyeW53OXBkNGF0bncifQ.x0Vx7b94vpi_T9YEmDpsnw\"\n\nconst Search = ({ updateCity }) => {\n\n\n  const onSuggestionSelect = (result) => {\n    updateCity(result)\n  }\n\n  return (\n    <div id=\"geocoder\" className=\"search-container\">\n      <h2>Find your city</h2>\n      <MapboxAutocomplete\n        publicKey={`pk.${sec}`}\n        inputClass='search'\n        onSuggestionSelect={onSuggestionSelect}\n        resetSearch={false}\n      />\n    </div>\n  )\n}\n\nexport default Search;\n","import React, { useState, useEffect } from 'react'\n\nimport Search from './components/search'\nimport Result from './components/result'\n\nconst endpoint = 'api.openweathermap.org/data/2.5/weather?q='\nconst key = 'bbe430e35346bd7c152eca9e7e756412'\n\nfunction App() {\n  const [city, setCity] = useState('')\n  const [data, setData] = useState({})\n\n  const updateCity = (c) => {\n    setCity(c)\n  }\n\n  const getWeatherData = (c) => {\n    console.log(`getting weather from ${c}`)\n    const url = `${endpoint}${city}&appiId=${key}`\n    fetch(url)\n      .then(res=> console.log(res))\n      // .then(data=> console.log(data))\n      // .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    if (city !== '') {\n      getWeatherData(city)\n    }\n  }, [city])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"title\">\n          <h1>SmallTalk</h1>\n          <h2>The premiere forecaster of conversations you don't care about</h2>\n        </div>\n        <Search updateCity={updateCity} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}