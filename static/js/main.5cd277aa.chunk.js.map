{"version":3,"sources":["components/search.js","components/result.js","App.js","index.js"],"names":["Search","updateCoords","id","className","publicKey","inputClass","onSuggestionSelect","result","lat","lon","resetSearch","randomPercent","Math","floor","random","Result","data","weather","city_name","country_code","src","icon","alt","temp","description","App","useState","coords","setCoords","setData","useEffect","c","console","log","url","fetch","then","res","json","catch","err","getWeatherData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAyBeA,EApBA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAOhB,OACE,yBAAKC,GAAG,WAAWC,UAAU,oBAC3B,4CACA,kBAAC,IAAD,CACEC,UAAS,aAbL,iGAcJC,WAAW,SACXC,mBAVqB,SAACC,EAAQC,EAAKC,GACvCR,EAAa,CAACO,MAAKC,SAUfC,aAAa,MCAfC,EAAgB,WAEpB,OAAOC,KAAKC,MAAM,GAAAD,KAAKE,SAA4B,IAAM,KAE5CC,EAnBA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OAAOA,EAAKC,QACV,yBAAKd,UAAU,oBACb,0CAAgBa,EAAKE,UAArB,KAAkCF,EAAKG,cACvC,yBAAKhB,UAAU,YACb,yBAAKiB,IAAG,UAPK,+CAOL,OAAoBJ,EAAKC,QAAQI,KAAjC,QAA6CC,IAAI,KACzD,2BAAIN,EAAKO,KAAT,UAEF,2BAAIP,EAAKC,QAAQO,aACjB,4BAAKb,IAAL,4CAEA,MCmCSc,MA1Cf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEWF,mBAAS,IAFpB,mBAENV,EAFM,KAEAa,EAFA,KA4Bb,OANAC,qBAAU,WACO,KAAXH,GAfiB,SAACI,GACtB,GAAIJ,EAAOnB,IAAK,CACdwB,QAAQC,IAAR,+BAAoCF,IACpC,IAAMG,EAAG,UAdE,0CAcF,eAbH,mCAaG,gBAAgCH,EAAEvB,IAAlC,gBAA6CuB,EAAEtB,KACxD0B,MAAMD,GACLE,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACfF,MAAK,SAAApB,GACJa,EAAQb,EAAKA,KAAK,IAClBgB,QAAQC,IAAIjB,EAAKA,KAAK,OAEvBuB,OAAM,SAAAC,GAAG,OAAIR,QAAQC,IAAIO,OAM1BC,CAAed,KAEhB,CAACA,IAGF,yBAAKxB,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACb,yCACA,8FAEF,kBAAC,EAAD,CAAQF,aA/BO,SAAC8B,GACpBH,EAAUG,MA+BN,kBAAC,EAAD,CAAQf,KAAMA,OCvCtB0B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5cd277aa.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport MapboxAutocomplete from 'react-mapbox-autocomplete'\n\nconst sec = \"eyJ1IjoiY2xhaXJlZnJvZnJvIiwiYSI6ImNrYnRsYnJvNTBhNzUyeW53OXBkNGF0bncifQ.x0Vx7b94vpi_T9YEmDpsnw\"\n\nconst Search = ({ updateCoords }) => {\n\n\n  const onSuggestionSelect = (result, lat, lon,) => {\n    updateCoords({lat, lon})\n  }\n\n  return (\n    <div id=\"geocoder\" className=\"search-container\">\n      <h2>Find a place</h2>\n      <MapboxAutocomplete\n        publicKey={`pk.${sec}`}\n        inputClass='search'\n        onSuggestionSelect={onSuggestionSelect}\n        resetSearch={false}\n      />\n    </div>\n  )\n}\n\nexport default Search;\n","import React, { useState, useEffect } from 'react'\n\nconst iconEndpoint = 'https://www.weatherbit.io/static/img/icons/'\n\nconst Result = ({ data }) => {\n  return data.weather ? (\n    <div className=\"result-container\">\n      <h2>Weather in {data.city_name}, {data.country_code}</h2>\n      <div className=\"icon-box\">\n        <img src={`${iconEndpoint}${data.weather.icon}.png`} alt=\"\"/>\n        <p>{data.temp}Â°C</p>\n      </div>\n      <p>{data.weather.description}</p>\n      <h2>{randomPercent()} chance of hearing this from strangers:</h2>\n    </div>\n  ) : null\n\n}\n\nconst randomPercent = () => {\n  // between 61 and 100\n  return Math.floor(Math.random() * (101 - 61 + 1) + 61) + \"%\";\n}\nexport default Result;\n","import React, { useState, useEffect } from 'react'\n\nimport Search from './components/search'\nimport Result from './components/result'\n\nconst endpoint = 'https://api.weatherbit.io/v2.0/current?'\nconst key = 'fdb84bad1ce344ad8a664672b46d3cac'\n\nfunction App() {\n  const [coords, setCoords] = useState({})\n  const [data, setData] = useState({})\n\n  const updateCoords = (c) => {\n    setCoords(c)\n  }\n\n  const getWeatherData = (c) => {\n    if (coords.lat) {\n      console.log(`getting weather from ${c}`)\n      const url = `${endpoint}key=${key}&lat=${c.lat}&lon=${c.lon}`\n      fetch(url)\n      .then(res=> res.json())\n      .then(data=> {\n        setData(data.data[0])\n        console.log(data.data[0])\n      })\n      .catch(err => console.log(err))\n    }\n  }\n\n  useEffect(() => {\n    if (coords !== '') {\n      getWeatherData(coords)\n    }\n  }, [coords])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"title\">\n          <h1>SmallTalk</h1>\n          <h3>The premiere forecaster of conversations you don't care about</h3>\n        </div>\n        <Search updateCoords={updateCoords} />\n        <Result data={data}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}