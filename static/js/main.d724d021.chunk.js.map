{"version":3,"sources":["components/search.js","static/smalltalk.js","components/result.js","lib/speak.js","App.js","index.js"],"names":["Search","updateCoords","id","className","publicKey","inputClass","onSuggestionSelect","result","lat","lon","resetSearch","smalltalk","weather","phrase","tags","temp","low","med","high","randomPercent","Math","floor","random","Result","data","useState","smalltalks","setSmalltalks","getRandFromArray","arr","length","rand","min","max","shuffle","j","x","i","useEffect","d","st","push","forEach","item","RegExp","join","test","description","slice","getSmalltalk","city_name","country_code","src","icon","alt","map","s","key","onClick","text","lang","window","speechSynthesis","u","SpeechSynthesisUtterance","rate","speak","alert","App","coords","setCoords","setData","c","console","log","url","fetch","then","res","json","catch","err","getWeatherData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d724d021.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport MapboxAutocomplete from 'react-mapbox-autocomplete'\n\nconst sec = \"eyJ1IjoiY2xhaXJlZnJvZnJvIiwiYSI6ImNrYnRsYnJvNTBhNzUyeW53OXBkNGF0bncifQ.x0Vx7b94vpi_T9YEmDpsnw\"\n\nconst Search = ({ updateCoords }) => {\n\n\n  const onSuggestionSelect = (result, lat, lon,) => {\n    updateCoords({lat, lon})\n  }\n\n  return (\n    <div id=\"geocoder\" className=\"search-container\">\n      <h2>Find a place</h2>\n      <MapboxAutocomplete\n        publicKey={`pk.${sec}`}\n        inputClass='search'\n        onSuggestionSelect={onSuggestionSelect}\n        resetSearch={false}\n      />\n    </div>\n  )\n}\n\nexport default Search;\n","export const smalltalk = {\n  weather: [\n    {\n      phrase: \"Pouring cats and dogs lately!\",\n      tags: [\"rain\", \"shower\"]\n    },\n    {\n      phrase: \"Lovely day isn't it!ðŸ™„\",\n      tags: [\"rain\", \"shower\"]\n    },\n    {\n      phrase: \"It doesnâ€™t look like itâ€™s going to stop raining today.\",\n      tags: [\"rain\", \"shower\", \"drizzle\"]\n    },\n    {\n      phrase: \"At least my tomatoes will be happy.\",\n      tags: [\"rain\", \"shower\", \"drizzle\"]\n    },\n    {\n      phrase: \"Well, Iâ€™ve heard itâ€™s worse in the west. Theyâ€™ve had terrible flooding.\",\n      tags: [\"sleet\", \"smoke\", \"haze\", \"showers\", \"hail\"]\n    },\n    {\n      phrase: \"Itâ€™s going to rain by the looks of it.\",\n      tags: [\"clouds\"]\n    },\n    {\n      phrase: \"Looks like the sun's trying to come out.\",\n      tags: [\"clouds\", \"drizzle\"]\n    },\n    {\n      phrase: \"Good day to curl up with a book, eh?\",\n      tags: [\"overcast\", \"broken clouds\", \"snow shower\"]\n    },\n    {\n      phrase: \"It's beginning to look a lot like Christmas! Unless you live in the southern hemisphere.\",\n      tags: [\"snow\", \"flurries\"]\n    },\n    {\n      phrase: \"Oh the weather outside is frightful.\",\n      tags: [\"snow\", \"flurries\", \"freezing\", \"hail\"]\n    },\n    {\n      phrase: \"Brrrrrrrrrr, right?\",\n      tags: [\"snow\", \"flurries\",\"freezing\"]\n    },\n    {\n      phrase: \"So how 'bout that weather?\",\n      tags: [\"misty\", \"smoke\", \"clouds\", \"rain\", \"clear\",\"fog\",\"shower\",\"snow\"]\n    },\n    {\n      phrase: \"It's finally decided to rain.\",\n      tags: [\"rain\", \"showers\"]\n    },\n    {\n      phrase: \"Crazy weather we're having!\",\n      tags: [\"showers\", \"hail\", \"sleet\"]\n    },\n    {\n      phrase: \"Crazy weather we're having!\",\n      tags: [\"showers\", \"hail\", \"sleet\"]\n    },\n    {\n      phrase: \"All of this loud thunder is making my dog very nervous.\",\n      tags: [\"thunder\"]\n    },\n    {\n      phrase: \"Finally I can get that tan.\",\n      tags: [\"clear\"]\n    },\n    {\n      phrase: \"The clouds look ominous.\",\n      tags: [\"clouds\"]\n    },\n    {\n      phrase: \"Itâ€™s beautiful outside. Do you have any plans?\",\n      tags: [\"clear\"]\n    },\n    {\n      phrase: \"It's raining cats and dogs!\",\n      tags: [\"shower\"]\n    },\n    {\n      phrase : \"Did you order this sunshine?\",\n      tags: [\"clear\"]\n    },\n    {\n      phrase : \"I love the way it smells when it rains.\",\n      tags: [\"rain\"]\n    },\n    {\n      phrase : \"Good day for a barbeque.\",\n      tags: [\"clear\"]\n    },\n    {\n      phrase : \"Good picnic weather.\",\n      tags: [\"clear\"]\n    },\n  ],\n  temp: {\n    low: [\n      \"A bit nippy today eh?\",\n      \"Itâ€™s freezing today! Hopefully it doesnâ€™t snow.\",\n      \"It sure would be nice to be in Hawaii right about now.\"\n    ],\n    med: [\n      \"Lovely day for tennis, I do say.\",\n      \"We couldnâ€™t ask for a nicer day, could we?\",\n      \"Enjoy today, looks like it's going to rain all weekend.\",\n    ],\n    high: [\n      \"Wow, itâ€™s so hot outside today, Iâ€™ve been sweating non-stop!\",\n      \"Itâ€™s SWELTERING outside!\",\n      \"Itâ€™s LIKE AN OVEN outside!\",\n      \"I'm sweating like a pig!\",\n      \"I'm just melting!\",\n      \"I sure miss winter\",\n    ],\n  }\n\n}\n","import React, { useState, useEffect } from 'react'\n\nimport {smalltalk} from '../static/smalltalk'\nimport {speak} from '../lib/speak'\nconst iconEndpoint = 'https://www.weatherbit.io/static/img/icons/'\n\nconst Result = ({ data }) => {\n  const [smalltalks, setSmalltalks] = useState([])\n\n  const getSmalltalk = (d) => {\n    let st = []\n\n    // get temp based smalltalk\n    if(d.temp < 18) {\n      st.push(getRandFromArray(smalltalk.temp.low))\n    } else if ( d.temp >= 18 && d.temp <= 29) {\n      st.push(getRandFromArray(smalltalk.temp.med))\n    } else {\n      st.push(getRandFromArray(smalltalk.temp.high))\n    }\n\n    // get weather based smalltalk\n    smalltalk.weather.forEach(item => {\n      if(new RegExp(item.tags.join(\"|\"),'i').test(d.weather.description)) {\n        st.push(item.phrase)\n      }\n    })\n    return shuffle(st).slice(0,rand(1,3))\n\n  }\n\n  const getRandFromArray = (arr) => {\n  return arr[Math.floor(Math.random() * arr.length)];\n  }\n\n  const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  const shuffle = (arr) => {\n    var j, x, i;\n    for (i = arr.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = arr[i];\n        arr[i] = arr[j];\n        arr[j] = x;\n    }\n    return arr;\n  }\n\n  useEffect(()=> {\n    if (data.weather) {\n      setSmalltalks(getSmalltalk(data))\n    }\n  }, [data])\n\n  return data.weather ? (\n    <div className=\"result-container\">\n      <h2>Weather in {data.city_name}, {data.country_code}</h2>\n      <div className=\"icon-box\">\n        <img src={`${iconEndpoint}${data.weather.icon}.png`} alt=\"\"/>\n        <p>{data.temp}Â°C</p>\n      </div>\n      <p>{data.weather.description}</p>\n      <p>with {randomPercent()} chance of hearing this from strangers:</p>\n      <ul>\n        {smalltalks.map((s,i)=> (\n          <li key={i}>\"{s}\"</li>\n        ))}\n      </ul>\n      <button onClick={()=> speak(smalltalks.join(' '), 'en-US')}>Get it out of the way now</button>\n    </div>\n  ) : null\n\n}\n\nconst randomPercent = () => {\n  // between 61 and 100\n  return Math.floor(Math.random() * (101 - 61 + 1) + 61) + \"%\";\n}\nexport default Result;\n","export const speak = (text, lang) => {\n  // check browser compatibility\n  if (!window.speechSynthesis) {\n    alert('Your browser doesn\\'t support text to speech.\\nTry Chrome 33+ :)');\n  } else {\n    const u = new SpeechSynthesisUtterance();\n    u.text = text;\n    u.lang = lang;\n    u.rate = 0.9;  // optional: change speaking speed (0.1 [slow] - 1 [normal])\n    speechSynthesis.speak(u);\n  }\n}\n","import React, { useState, useEffect } from 'react'\n\nimport Search from './components/search'\nimport Result from './components/result'\n\nconst endpoint = 'https://api.weatherbit.io/v2.0/current?'\nconst key = 'fdb84bad1ce344ad8a664672b46d3cac'\n\nfunction App() {\n  const [coords, setCoords] = useState({})\n  const [data, setData] = useState({})\n\n  const updateCoords = (c) => {\n    setCoords(c)\n  }\n\n  const getWeatherData = (c) => {\n    if (coords.lat) {\n      console.log(`getting weather from ${c}`)\n      const url = `${endpoint}key=${key}&lat=${c.lat}&lon=${c.lon}`\n      fetch(url)\n      .then(res=> res.json())\n      .then(data=> {\n        setData(data.data[0])\n        console.log(data.data[0])\n      })\n      .catch(err => console.log(err))\n    }\n  }\n\n  useEffect(() => {\n    if (coords !== '') {\n      getWeatherData(coords)\n    }\n  }, [coords])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"title\">\n          <h1>SmallTalk</h1>\n          <h3>The premiere forecaster of conversations you won't care about</h3>\n        </div>\n        <Search updateCoords={updateCoords} />\n        <Result data={data}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}